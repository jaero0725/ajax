JQuery and Ajax

 <Ajax의 구성요소>
 □ XHTML(현재는 HTML5)과 CSS를 사용한 표준기술기반의 웹 페이지
 □ DOM을 사용한 동적인 화면표시와 상호작용
 □ XML과 XSLT등을 사용한 데이터의 변경과 조작
 □ XMLHttpRequest를 사용한 비동기적인 데이터 전송
 □ 그리고 이것들을 결합해서 사용하는 자바스크립트


<script src="../js/jquery-1.11.0.min.js"></script>
<Ajax 사용방법>

$.ajax({
  url: '주소',
  type: 'get 또는 post',
  data: {
    // 보낼 데이터
  },
  dataType: 'json, xml, script, text 또는 html',
  done: function(response) {
    // 성공 시 동작
  },
  fail: function(error) {
    // 실패 시 동작
  },
  always: function(response) {
    // 성공하든 실패하든 항상 할 동작
  }
});

get이나 post만을 전문적으로 하는 메소드도 있습니다. 데이터와 데이터타입은 입력하지 않아도 됩니다.

$.get('주소', '데이터', function(res) {
  // 성공 시 동작
}, '데이터타입');
$.post('주소', '데이터', function(res) {
  // 성공 시 동작
}, '데이터타입');

스크립트와 JSON만을 전문적으로 가져오는 메소드도 있습니다.

$.getScript('스크립트 주소', function(script) {
  // 성공 시 동작
});
$.getJSON('JSON 주소', { 데이터 }, function(data) {
  // 성공 시 동작
});
선택한 태그 안에 다른 html 파일로부터 가져온 태그를 넣는 메소드도 있습니다.

$('#zero').load('다른 html 주소');

//사용자가 입력한 값과 DB에 저장된 값을 비교해서 중복하는지 check
function idDuplicationcheck(id) {
 $.ajax({
	//type 설정
	type : "GET",
	url : "서버로 보낼 주소를 입력" 

	//사용자가 입력하여 id로 넘어온 값을 서버로 보냄.
	data : {"id",id}.
	success : function(data) {
		if(data) {
			alert("사용할 수 없는 아이디입니다.");
		} else {
			alert("사용 가능한 아이디 입니다.");
		}
	}

	...

 })
}